name: Scrape Data

on:
  schedule:
  - cron: 0 0 * * *
  workflow_dispatch:

jobs:
  downloadDataset:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js with yarn
      uses: actions/setup-node@v2
      with:
        node-version: 12.x
        cache: 'yarn'
    - name: Install dependencies
      run: yarn install
    - name: Scrape Dataset
      run: yarn scrape
    - name: Prepare Scraped Results
      run: |
        mkdir /tmp/res
        cp -r data /tmp/res
    - uses: actions/checkout@v2
      with:
        ref: data
    - run: |
        echo "* $(date)" >> update.log
        cp -r /tmp/res/data .
        git config user.name updater-bot
        git config user.email github-actions@github.com
        git add .
        git commit -m "updater-bot ${date}"
        git push
  runOcrForDgi:
    runs-on: ubuntu-latest
    needs: downloadDataset
    steps:
    - uses: actions/checkout@v2
    - name: Prepare Script
      run: |
        sudo apt-get install -y jq
        sudo apt-get install -y tesseract-ocr
        cp ./scripts/ocr_dgi.sh /tmp/ocr_dgi.sh
    - uses: actions/checkout@v2
      with:
        ref: data
    - name: Run Script
      run: |
        cp /tmp/ocr_dgi.sh ./data/ocr_dgi.sh
        chmod +x ./data/ocr_dgi.sh
        cd data
        ./ocr_dgi.sh
        cd ..
        rm ./data/ocr_dgi.sh
    - run: |
        echo "* $(date) AUTO_OCR" >> update.log
        git config user.name updater-bot
        git config user.email github-actions@github.com
        git add .
        git commit -m "updater-bot ${date}"
        git push
  postScrape:
    runs-on: ubuntu-latest
    needs: runOcrForDgi
    steps:
    - uses: actions/checkout@v2
      with:
        ref: data
    - name: Recall Scraped Results
      run: |
        mkdir /tmp/res
        cp -r data /tmp/res
    - uses: actions/checkout@v2
    - run: |
        cp -r /tmp/res/data .
    - name: Use Node.js with yarn
      uses: actions/setup-node@v2
      with:
        node-version: 12.x
        cache: 'yarn'
    - name: Install dependencies
      run: yarn install
    - name: Parse Dataset
      run: yarn scrape_dgi_post
    - name: Prepare Scraped Results
      run: |
        cp -r data /tmp/res
    - uses: actions/checkout@v2
      with:
        ref: data
    - run: |
        echo "* $(date) POST_SCRAPE" >> update.log
        cp -r /tmp/res/data .
        git config user.name updater-bot
        git config user.email github-actions@github.com
        git add .
        git commit -m "updater-bot ${date}"
        git push